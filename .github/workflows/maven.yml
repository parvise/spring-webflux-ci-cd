# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "deploy-to-ec2" ]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      #run: mvn -B package --file pom.xml
      run: mvn clean install -DskipTests
    - name: Login to docker hub
      #run:  docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Verify Docker login
      run: docker info
    - name: Build  Docker image
      run: docker build -t parvise/deploy-ec2 .
    - name: Push Docker image to Docker Hub
      run: docker push parvise/deploy-ec2:latest

  deploy:
    needs: build
    runs-on: self-hosted  # This will run on your Windows machine

    steps:
      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/deploy-ec2:latest

      - name: Stop & remove container
        run: docker stop deploy-ec2 || true && docker rm deploy-ec2 || true
        shell: bash


      #      - name: Restart container
#        run: |
#          docker rm -f deploy-ec2 -ErrorAction SilentlyContinue
#          docker run -d -p 9090:9090 --name deploy-ec2 ${{ secrets.DOCKER_USERNAME }}/deploy-ec2
      - name: Run Docker container on port 9090
        run: docker run -d -p 9090:9090 --name deploy-ec2 ${{ secrets.DOCKER_USERNAME }}/deploy-ec2
      - name: Allow PowerShell scripts
        run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
        shell: powershell

#  deploy:
#    runs-on: [ubuntu-latest]
#    needs: build
#    steps:
#    - name: pull image from Docker Hub
#      run: docker pull parvise/deploy-ec2:latest
#    - name: Delete old container if exists
#      run: docker stop deploy-ec2 || true && docker rm deploy-ec2 || true
#    - name: Run new container
#      run: docker run -d --name deploy-ec2-container parvise/deploy-ec2 -p 80:808


